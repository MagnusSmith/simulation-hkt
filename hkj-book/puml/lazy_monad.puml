@startuml LazyMonad Detail
!include https://raw.githubusercontent.com/ncosta-ic/catppuccin-macchiato-plantuml-theme/main/theme.puml
interface Kind<F, A>
interface "LazyKind<A> extends Kind<LazyKind.Witness, A>"
interface Functor<F>
interface "Applicative<F> extends Functor<F>"
interface "Monad<F> extends Applicative<F>"

class LazyKindHelper {
 {static} LazyKind<A> wrap(Lazy<A>)
 {static} Lazy<A> unwrap(Kind<LazyKind.Witness, A>)
 ' ...
}

class LazyMonad implements Monad<LazyKind.Witness> {
 + <A, B> @NonNull Kind<LazyKind.Witness, B> map(@NonNull Function<A, B>, @NonNull Kind<LazyKind.Witness, A>)
 + <A> @NonNull Kind<LazyKind.Witness, A> of(@Nullable A)
 + <A, B> @NonNull Kind<LazyKind.Witness, B> ap(@NonNull Kind<LazyKind.Witness, Function<A, B>>, @NonNull Kind<LazyKind.Witness, A>)
 + <A, B> @NonNull Kind<LazyKind.Witness, B> flatMap(@NonNull Function<A, Kind<LazyKind.Witness, B>>, @NonNull Kind<LazyKind.Witness, A>)
}

LazyMonad .u.|> Monad : implements
LazyMonad ..> LazyKindHelper : uses
LazyMonad ..> LazyKind : operates on

@enduml